{"version":3,"sources":["componets/Navbar.js","componets/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","lang","charSet","httpEquiv","content","name","href","rel","integrity","crossOrigin","className","concat","mode","hre","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","togglemode","htmlFor","src","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","cols","rows","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","ntext","split","join","length","defaultProps","about","App","setMode","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9be035ac.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <html lang=\"en\">\r\n                <head>\r\n                    <meta charSet=\"UTF-8\" />\r\n                    <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n                    <title>TextUtils</title>\r\n                    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi\" crossOrigin=\"anonymous\"></link>\r\n                </head>\r\n                <body>\r\n\r\n                    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                        <div className=\"container-fluid\">\r\n                            {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                            <a className=\"navbar-brand\" hre=\"#\">{props.title}</a>\r\n                            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                <span className=\"navbar-toggler-icon\"></span>\r\n                            </button>\r\n                            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                                    <li className=\"nav-item\">\r\n                                        {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                                    </li>\r\n                                    {/* <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to=\"/\">{props.about}</Link>\r\n                                    </li> */}\r\n\r\n                                </ul>\r\n                                {/* <form className=\"d-flex\" role=\"search\">\r\n                                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                                    <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                                </form> */}\r\n                                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                                    <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.togglemode}/>\r\n                                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n\r\n                    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3\" crossOrigin=\"anonymous\"></script>\r\n                </body>\r\n            </html>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set Title here\",\r\n    about: \"Set About here\",\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase text\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleloClick = () => {\r\n        // console.log(\"Lowercase text\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"onchange text\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopyClick = (event) => {\r\n        let text = document.getElementById(\"mytext\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const handleExtraSpace = (event) => {\r\n        let ntext = text.split(/[ ]+/);\r\n        setText(ntext.join(\" \"));\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // setText(\"enter text\");\r\n    return (\r\n        <>\r\n            <div className=\"containet\" style={{color: props.mode==='dark'?'white':'rgb(50 61 71)'}}>\r\n                <div className=\"mt-3 container\">\r\n                    <h1>{props.heading}</h1>\r\n                    <textarea value={text} id=\"mytext\" style={{backgroundColor: props.mode==='dark'?'rgb(50 61 71)':'white', color: props.mode==='dark'?'white':'black'}} onChange={handleOnChange} cols=\"30\" rows=\"10\" className='form-control'></textarea>\r\n                    <button onClick={handleUpClick} className='btn btn-primary mt-3 mx-1'>Convert to Uppercase</button>\r\n                    <button onClick={handleloClick} className='btn btn-primary mt-3 mx-1'>Convert to Lowercase</button>\r\n                    <button onClick={handleClearClick} className='btn btn-primary mt-3 mx-1'>Clear Text</button>\r\n                    <button onClick={handleCopyClick} className='btn btn-primary mt-3 mx-1'>Copy Text</button>\r\n                    <button onClick={handleExtraSpace} className='btn btn-primary mt-3 mx-1'>Remove Extra Spaces</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'rgb(50 61 71)'}}>\r\n                <h1>Your Text Summary</h1>\r\n                <p>{text.split(\" \").length} Words and {text.length} Characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes Reads</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter something in the above TextBox to Preview here\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './componets/Navbar';\nimport TextForm from './componets/TextForm';\n// import About from './componets/About';\nimport { useState } from 'react';\nimport React from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState(\"light\");\n\n  const togglemode = ()=>{\n    if(mode === \"light\")\n    {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"rgb(50 61 71)\";\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TextUtils is a amazing mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now\";\n      // }, 1500);\n    }\n    else{\n      setMode(\"light\")\n      document.body.style.backgroundColor = \"white\";\n      document.title = \"TextUtils - Light Mode\";\n    }\n  }\n\n  return (\n    <>\n    {/* {<Router>\n      <Navbar title=\"TextUtils\" about=\"About\" mode={mode} togglemode={togglemode} />\n      <Navbar />\n      <>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n            <TextForm heading=\"Enter the text to anaylze below\" mode={mode}/>\n          </Route>\n      </>\n    </Router> } */}\n    <Navbar title=\"TextUtils\" about=\"About\" mode={mode} togglemode={togglemode} />\n    <TextForm heading=\"Enter the text to anaylze below\" mode={mode}/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}